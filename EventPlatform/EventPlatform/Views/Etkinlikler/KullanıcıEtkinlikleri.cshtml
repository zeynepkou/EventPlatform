@{
    ViewData["Title"] = "Oluşturduğunuz Etkinlikler";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var favoriDurumlari = ViewBag.FavoriDurumlari as Dictionary<int, bool>;
}

<div class="container mt-4" style="background-color: #F0F8FF; min-height: 100vh; padding: 20px;">
    <!-- TempData'dan gelen hata mesajını burada göster -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <h2 class="text-center mb-4" style="color: black;">Oluşturduğunuz Etkinlikler</h2>
    <div class="row">
        @foreach (var etkinlik in Model)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card event-card hover-effect" style="background-color: #ffffff; border-radius: 15px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); width: 100%; height: 480px; padding-bottom: 20px; transition: transform 0.3s, box-shadow 0.3s; overflow: hidden;">
                    <!-- Favori Kalbi -->
                    <div class="favori-icon" data-id="@etkinlik.ID" style="position: absolute; top: 10px; right: 10px; cursor: pointer; z-index: 10;">
                        <i class="bi @(favoriDurumlari != null && favoriDurumlari[etkinlik.ID] ? "bi-heart-fill active" : "bi-heart")"></i>
                    </div>

                    <!-- Etkinlik Resmi -->
                    <div style="width: 100%; height: 200px; overflow: hidden; border-top-left-radius: 15px; border-top-right-radius: 15px;">
                        <img src="@etkinlik.EtkinlikResmi" alt="@etkinlik.EtkinlikAdi"
                             style="width: 100%; height: 100%; object-fit: cover;">
                    </div>
                    <div class="card-body text-center">
                        <h5 style="color: #4a69bd; font-weight: bold;">@etkinlik.EtkinlikAdi</h5>

                        <!-- Tarih ve Saat -->
                        <p style="color: #000000;">
                            <i class="bi bi-calendar" style="color: #4a69bd; margin-right: 5px;"></i>
                            <strong>Tarih:</strong> @etkinlik.Tarih.ToShortDateString()
                        </p>
                        <p style="color: #000000;">
                            <i class="bi bi-clock" style="color: #4a69bd; margin-right: 5px;"></i>
                            <strong>Saat:</strong> @etkinlik.Saat.ToString(@"hh\:mm")
                        </p>

                        <!-- Konum -->
                        <p style="color: #000000; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                            <i class="bi bi-geo-alt" style="color: #4a69bd; margin-right: 5px;"></i>
                            <strong>Konum:</strong> @etkinlik.Konum
                        </p>

                        <!-- Favorilenme Sayısı -->
                        <p class="favori-sayisi" style="color: #000000; font-size: 1.2rem; margin-top: 10px;">
                            <i class="bi bi-heart-fill" style="color: red;"></i> Favorilenme Sayısı: <span class="favori-sayisi-span">@etkinlik.FavoriSayisi</span>
                        </p>

                        <!-- Düzenle ve Sil Butonları -->
                        <a href="@Url.Action("EditEtkinlik", "EtkinlikDetay", new { id = etkinlik.ID })"
                           class="btn btn-primary" style="background-color: #4a69bd; border: none;">Düzenle</a>
                        <form asp-action="Delete" asp-controller="EtkinlikDetay" method="post" style="display:inline;">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@etkinlik.ID" />
                            <button type="submit" class="btn btn-danger" style="border: none; border-radius: 8px;">Sil</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<style>
    .hover-effect:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    }

    .favori-icon i {
        font-size: 1.8rem;
        color: black; /* Varsayılan renk */
        border: 2px solid black; /* Siyah çerçeve */
        border-radius: 50%;
        padding: 5px;
        background-color: white; /* İçi beyaz */
        transition: color 0.3s, background-color 0.3s;
    }

        .favori-icon i.active {
            color: red; /* Favori olduğunda içi kırmızı */
            background-color: white; /* Çerçeve yine beyaz */
        }

</style>



<script>
document.querySelectorAll('.favori-icon').forEach(icon => {
    icon.addEventListener('click', function () {
        const etkinlikId = this.getAttribute('data-id');
        const heartIcon = this.querySelector('i');

        // CSRF Token'ı formdan al
        const csrfTokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
        if (!csrfTokenInput) {
            console.error("CSRF token bulunamadı!");
            return;
        }

        const csrfToken = csrfTokenInput.value;

        // Fetch ile favori işlemi
        fetch(`/Etkinlikler/FavoriEkle?etkinlikId=${etkinlikId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': csrfToken
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Favori durumu güncelle
                    if (data.isFavorite) {
                        heartIcon.classList.add('active', 'bi-heart-fill');
                        heartIcon.classList.remove('bi-heart');
                    } else {
                        heartIcon.classList.remove('active', 'bi-heart-fill');
                        heartIcon.classList.add('bi-heart');
                    }

                    // Favori sayısını güncelle (yalnızca sayıyı değiştir)
                    const favoriSayisiElement = this.parentElement.parentElement.querySelector('.favori-sayisi-span');
                    if (favoriSayisiElement) {
                        favoriSayisiElement.textContent = data.favoriSayisi;
                    }
                } else {
                    alert(data.message);
                }
            })
            .catch(err => console.error('Error:', err));
    });
});
</script>
