// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yazlab2.Data;

#nullable disable

namespace Yazlab2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241107195403_reset")]
    partial class reset
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Yazlab2.Models.Etkinlik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EtkinlikAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EtkinlikSuresi")
                        .HasColumnType("time");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Konum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Saat")
                        .HasColumnType("time");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Etkinlikler");
                });

            modelBuilder.Entity("Yazlab2.Models.Katılımcı", b =>
                {
                    b.Property<int>("KullanıcıID")
                        .HasColumnType("int");

                    b.Property<int>("EtkinlikID")
                        .HasColumnType("int");

                    b.HasKey("KullanıcıID", "EtkinlikID");

                    b.HasIndex("EtkinlikID");

                    b.ToTable("Katılımcılar");
                });

            modelBuilder.Entity("Yazlab2.Models.Kullanıcı", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IlgiAlanlari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Konum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilFotografiYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetCodeExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Kullanıcılar");
                });

            modelBuilder.Entity("Yazlab2.Models.Mesaj", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AliciID")
                        .HasColumnType("int");

                    b.Property<int>("GondericiID")
                        .HasColumnType("int");

                    b.Property<DateTime>("GonderimZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("MesajMetni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AliciID");

                    b.HasIndex("GondericiID");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("Yazlab2.Models.Puan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("KazanilanTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullanıcıID")
                        .HasColumnType("int");

                    b.Property<int>("Puanlar")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KullanıcıID");

                    b.ToTable("Puanlar");
                });

            modelBuilder.Entity("Yazlab2.Models.Katılımcı", b =>
                {
                    b.HasOne("Yazlab2.Models.Etkinlik", "Etkinlik")
                        .WithMany("Katılımcılar")
                        .HasForeignKey("EtkinlikID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Yazlab2.Models.Kullanıcı", "Kullanıcı")
                        .WithMany("KatildigiEtkinlikler")
                        .HasForeignKey("KullanıcıID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Etkinlik");

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("Yazlab2.Models.Mesaj", b =>
                {
                    b.HasOne("Yazlab2.Models.Kullanıcı", "Alici")
                        .WithMany("AlinanMesajlar")
                        .HasForeignKey("AliciID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Yazlab2.Models.Kullanıcı", "Gonderici")
                        .WithMany("GonderilenMesajlar")
                        .HasForeignKey("GondericiID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alici");

                    b.Navigation("Gonderici");
                });

            modelBuilder.Entity("Yazlab2.Models.Puan", b =>
                {
                    b.HasOne("Yazlab2.Models.Kullanıcı", "Kullanıcı")
                        .WithMany("Puanlar")
                        .HasForeignKey("KullanıcıID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("Yazlab2.Models.Etkinlik", b =>
                {
                    b.Navigation("Katılımcılar");
                });

            modelBuilder.Entity("Yazlab2.Models.Kullanıcı", b =>
                {
                    b.Navigation("AlinanMesajlar");

                    b.Navigation("GonderilenMesajlar");

                    b.Navigation("KatildigiEtkinlikler");

                    b.Navigation("Puanlar");
                });
#pragma warning restore 612, 618
        }
    }
}
